import matplotlib.pyplot as plt 
import numpy as np

#Model parameters
A = 2000 #[m2]

#Simulation time settings:
Ts = 1 #[s]
t_start = 0 #[s]
t_stop = 5000 #[s]
N_sim = int((t_stop - t_start)/Ts)+1 #Number of time-steps

# Preallocation of arrays for plotting:
t_array = np.linspace(t_start, t_stop, N_sim)
k_array = np.arange(0, N_sim)
h_array = np.zeros(N_sim)
F_i_array = np.zeros(N_sim)
F_u_array = np.zeros(N_sim)
# Params of input signals:
t0 = 1000 # [s]
t1 = 2000
F_i_0 = 2.0 # [m]
F_i_1 = 3.0
F_u_0 = 2.0
F_u_1 = 4.0
# Initialization:
h_0 = 2.0 # [m]
h_k = h_0


# Simulation loop:
for k in k_array:
    t_k = t_array[k]
    # Selecting inputs:
    if (t_k >= t_start and t_k < t0):
        F_i_k = F_i_0
        F_u_k = F_u_0
    if (t_k >= t0 and t_k < t1):
        F_i_k = F_i_1
        F_u_k = F_u_0
    if (t_k >= t1 and t_k <= t_stop):
        F_i_k = F_i_1
        F_u_k = F_u_1
# Time-derivative:
    dh_dt_k = (1/A)*(F_i_k - F_u_k)
# State updates using the Euler method:
    h_kp1 = h_k + dh_dt_k*Ts
# Arrays for plotting:
    h_array[k] = h_k
    F_i_array[k] = F_i_k
    F_u_array[k] = F_u_k
# Time shift:
    h_k = h_kp1

plt.close('all') # Closes all figures before plotting
fig_width_inch = 24/2.54
fig_height_inch = 18/2.54
plt.figure(num='Simulering av magasin',
    figsize=(fig_width_inch, fig_height_inch))
plt.subplot(2, 1, 1)
plt.grid(which='both', color='grey')
plt.ylim(0.9, 2.6)
plt.title('Simulering av magasin')
plt.plot(t_array, h_array, 'b')
plt.legend(labels=('NivÃ¥ h [m]', ), # Note: Comma and space!
    loc='upper left', handlelength=2, fontsize=12)
plt.subplot(2, 1, 2)
plt.grid(which='both', color='grey')
plt.ylim(1.9, 4.1)
plt.xlabel('t [s]')
plt.plot(t_array, F_i_array, 'r', t_array, F_u_array, 'g')
plt.legend(labels=('InnstrÃ¸m F i [m3/s]', 'UtstrÃ¸m F u [m3/s]'),
    loc='upper left', handlelength=2, fontsize=12)
plt.show()
plt.savefig('prog sim innlopsmagasin.pdf') # pdf file of plot
